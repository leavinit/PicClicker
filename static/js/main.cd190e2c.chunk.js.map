{"version":3,"sources":["components/Wrapper/index.js","components/PicDiv/index.js","components/Jumbotron/index.js","components/Nav/index.js","ShuffleArray.js","components/Grid/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","PicDiv","console","log","clicked","alt","name","src","image","onClick","clickHandler","Jumbotron","Nav","href","gameScore","ShuffleArray","arr","result","i","length","r","Math","floor","random","j","k","undefined","Container","_ref","fluid","concat","App","state","imagesObj","pics","shuffle","tempArray","shuffleArray","_this","setState","incrementScore","resetScore","imgArray","forEach","img","id","_this2","this","components_Jumbotron","components_Nav","components_Wrapper","map","components_PicDiv","key","reset","React","Component","ReactDOM","render","my_app_src_App","document","getElementById"],"mappings":"uzBAOeA,MAJf,SAAiBC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,wBCY1BC,MAbf,SAAgBN,GAEZ,OADAO,QAAQC,IAAIR,EAAMS,SAGdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKO,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,MAAOC,QAAS,WAAOd,EAAMe,2BCK/DC,MAXf,WACE,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,cACAH,EAAAC,EAAAC,cAAA,0HCMSc,MAVf,SAAajB,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAec,KAAK,KAAjC,UACUlB,EAAMmB,aCcLC,MArBjB,SAAsBC,GAGlB,IADA,IAAMC,EAAS,GACNC,EAAIF,EAAIG,OAAO,EAAGD,GAAK,EAAGA,IAIjC,IAFA,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAUL,EAAE,IAE9BM,EAAI,EAAGC,EAAI,EAAGD,GAAKR,EAAIG,OAAO,EAAGK,IACvC,QAAiBE,IAAdT,EAAOO,GAAkB,CAC1B,GAAGC,IAAML,EAAG,CACVH,EAAOO,GAAKR,EAAIE,GAChB,MAEFO,IAIN,OAAOR,SCZJ,SAASU,EAATC,GAAwC,IAAnBC,EAAmBD,EAAnBC,MAAO7B,EAAY4B,EAAZ5B,SACjC,OAAOJ,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAA+B,OAAcD,EAAQ,SAAW,KAAO7B,OC8EhD+B,6MAvEbC,MAAQ,CACNlB,UAAY,EACZmB,UAAWC,KAGbC,QAAU,WACR,IAAIC,EAAYC,EAAaC,EAAKN,MAAMC,WACxCK,EAAKC,SAAS,CAACN,UAAWG,OAG5BI,eAAiB,WACfF,EAAKC,SAAS,CAAEzB,UAAWwB,EAAKN,MAAMlB,UAAY,OAGpD2B,WAAa,WACTH,EAAKC,SAAS,CAACzB,UAAW,OAE9BJ,aAAe,WAEb,GAAG4B,EAAKlC,QACN,CAEEkC,EAAKG,aACL,IAAIC,EAAWJ,EAAKN,MAAMC,UAC1BS,EAASC,QAAU,SAAAC,GAAG,OAAIA,EAAIxC,SAAU,GACxCkC,EAAKC,SAAS,CAACN,UAAYS,IAC3BJ,EAAKH,cAGP,CAEE,IAAIO,EAAWJ,EAAKN,MAAMC,UAC1BK,EAAKE,iBACLF,EAAKH,UACLG,EAAKlC,SAAU,EAEfsC,EAASC,QAAU,SAAAC,GACZA,EAAIxC,UACHF,QAAQC,IAAIyC,EAAIxC,SAChBF,QAAQC,IAAIyC,EAAIC,gFAOrB,IAAAC,EAAAC,KACP,OACAnD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACmD,EAAD,CAAKnC,UAAWiC,KAAKf,MAAMlB,YAC3BlB,EAAAC,EAAAC,cAAC6B,EAAD,KACA/B,EAAAC,EAAAC,cAACoD,EAAD,KACMH,KAAKf,MAAMC,UAAUkB,IAAI,SAAC3C,GAAD,OACvBZ,EAAAC,EAAAC,cAACsD,EAAD,CACAC,IAAO7C,EAAMqC,GACbA,GAAMrC,EAAMqC,GACZrC,MAASA,EAAMA,MACfJ,QAAWI,EAAMJ,QACjBM,aAAgBoC,EAAKpC,aACrB4C,MAASR,EAAKL,yBA9DZc,IAAMC,iBCNxBC,IAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cd190e2c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction PicDiv(props) {\r\n    console.log(props.clicked);\r\n    return (\r\n        \r\n        <div className=\"card\">\r\n            <div className=\"img-container\">\r\n                <img alt={props.name} src={props.image} onClick={() => {props.clickHandler()}} />\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PicDiv;\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1 className=\"font-weight-bold\">PicClicker</h1>\n      <h3>Don't click on an image more than once to boost your score!\n      Click an image twice? Time to try again.</h3>\n\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Score: {props.gameScore}\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","function ShuffleArray(arr){\r\n//acquired from https://stackoverflow.com/questions/53591691/sorting-an-array-in-random-order\r\n    const result = [];\r\n    for (let i = arr.length-1; i >= 0; i--) {\r\n      // picks an integer between 0 and i:\r\n      const r = Math.floor(Math.random()*(i+1));   // NOTE: use a better RNG if cryptographic security is needed\r\n      // inserts the arr[i] element in the r-th free space in the shuffled array:\r\n      for(let j = 0, k = 0; j <= arr.length-1; j++) {\r\n        if(result[j] === undefined) {\r\n          if(k === r) {\r\n            result[j] = arr[i];    // NOTE: if array contains objects, this doesn't clone them! Use a better clone function instead, if that is needed. \r\n            break;\r\n          }\r\n          k++;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  \r\n\r\n  export default ShuffleArray;\r\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport pics from \"./pics.json\";\r\nimport PicDiv from \"./components/PicDiv\";\r\nimport Jumbotron from \"./components/Jumbotron\"\r\nimport Nav from \"./components/Nav\"\r\nimport shuffleArray from \"./ShuffleArray\"\r\n\r\nimport './App.css';\r\nimport { Container } from './components/Grid';\r\n\r\nclass App extends React.Component{\r\n    //score and pics are the main state to be handled in this app\r\n  state = {\r\n    gameScore : 0 ,\r\n    imagesObj: pics,\r\n  }\r\n  //shuffles pics\r\n  shuffle = () => {\r\n    let tempArray = shuffleArray(this.state.imagesObj);\r\n    this.setState({imagesObj: tempArray});\r\n  }\r\n  //ups the game score when unclicked pic is clicked\r\n  incrementScore = () => {\r\n    this.setState({ gameScore: this.state.gameScore + 1 });\r\n  };\r\n\r\n  resetScore = () => {\r\n      this.setState({gameScore: 0})\r\n  }\r\n  clickHandler = () => {\r\n    // console.log(this.clicked)    \r\n    if(this.clicked)\r\n      {\r\n        \r\n        this.resetScore(); \r\n        let imgArray = this.state.imagesObj;\r\n        imgArray.forEach = img => img.clicked = false;\r\n        this.setState({imagesObj : imgArray});\r\n        this.shuffle();\r\n      }\r\n      else\r\n      {\r\n        // console.log(this.state.gameScore)\r\n        let imgArray = this.state.imagesObj;\r\n        this.incrementScore();\r\n        this.shuffle();\r\n        this.clicked = true;\r\n        \r\n        imgArray.forEach = img => {\r\n            if(img.clicked){\r\n                console.log(img.clicked);\r\n                console.log(img.id)\r\n            }\r\n        }\r\n      }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n        <Jumbotron />\r\n        <Nav gameScore={this.state.gameScore}/>\r\n        <Container>\r\n        <Wrapper>\r\n            { this.state.imagesObj.map((image) => (\r\n                <PicDiv\r\n                key = {image.id}   \r\n                id = {image.id}          \r\n                image = {image.image}\r\n                clicked = {image.clicked}\r\n                clickHandler = {this.clickHandler}\r\n                reset = {this.resetScore}\r\n                />\r\n                )\r\n            )\r\n            }\r\n        </Wrapper>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}